{
  "swagger": "2.0",
  "info": {
    "description": "API server.",
    "version": "1.0.0",
    "title": "Bluble"
  },
  "host": "localhost:3000",
  "tags": [
    { "name": "Auth", "description": "Everything about user authentication" },
    {
      "name": "Availability",
      "description": "Access to availability information"
    }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Signup a new user",
        "description": "Endpoint to singup a new user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Signup request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": { "description": "Signup successful" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login a user",
        "description": "Endpoint to login a user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Login request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "default": "johndoe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "default": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Login successful" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout a user",
        "description": "Endpoint to logout a user.",
        "parameters": [],
        "responses": {
          "200": { "description": "Logout successful" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/availability/add": {
      "post": {
        "tags": ["Availability"],
        "summary": "Create a new availability",
        "description": "Endpoint to create availability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Availability add request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Availability"
            }
          }
        ],
        "responses": {
          "201": { "description": "Availability created successfully" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/availability/all": {
      "get": {
        "tags": ["Availability"],
        "summary": "Get all availability",
        "description": "Endpoint to get availability",
        "responses": {
          "200": { "description": "Get all availability successful" },
          "401": { "description": "Authentication failed" }
        }
      }
    },
    "/api/availability/edit/{id}": {
      "get": {
        "tags": ["Availability"],
        "summary": "Availability get",
        "description": "Endpoint to get availability",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Set availability ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Get availability successful" },
          "401": { "description": "Authentication failed" }
        }
      }
    },
    "/api/availability/update/{id}": {
      "put": {
        "tags": ["Availability"],
        "summary": "Availability update",
        "description": "Endpoint to update availability",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Set availability ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Availability update requst body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "start_time": {
                  "type": "string",
                  "default": "2024-04-29 17:12:24"
                },
                "end_time": {
                  "type": "string",
                  "default": "2024-04-29 21:12:24"
                },
                "day_of_week": {
                  "type": "string",
                  "default": "Sunday"
                }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "Availability update successfully" },
          "401": { "description": "Authentication failed" }
        }
      }
    },
    "/api/availability/delete/{id}": {
      "delete": {
        "tags": ["Availability"],
        "summary": "Availability delete",
        "description": "Endpoint to delete availability.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Set availability ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Availability delete successfully" },
          "401": { "description": "Authentication failed" }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "default": "Jone Doe"
        },
        "email": {
          "type": "string",
          "default": "jonedoe@gmail.com"
        },
        "password": {
          "type": "string",
          "default": "jonedoe"
        }
      }
    },
    "Availability": {
      "type": "object",
      "properties": {
        "start_time": {
          "type": "string",
          "default": "2024-04-28 17:12:24"
        },
        "end_time": {
          "type": "string",
          "default": "2024-04-28 21:12:24"
        },
        "day_of_week": {
          "type": "string",
          "default": "Sunday"
        }
      }
    }
  }
}
